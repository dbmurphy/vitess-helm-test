apiVersion: batch/v1
kind: Job
metadata:
  name: aggregate-vtgate-auth-users
  labels:
    app: {{ include "vitess.fullname" . }}
spec:
  template:
    spec:
      containers:
        - name: aggregate-secrets
          image: amazonlinux:2
          command:
            - "/bin/bash"
            - "-c"
            - |
              set -e
              echo "Fetching secrets from AWS Secrets Manager..."
              aws secretsmanager list-secrets --query 'SecretList[?starts_with(Name, `/{{ .Values.aws.secretsPath }}/users/`)].Name' --output text > /tmp/user-secrets.txt
              echo '[]' > /tmp/vtgate-auth.json
              for secret_name in $(cat /tmp/user-secrets.txt); do
                username=$(echo $secret_name | awk -F'/' '{print $NF}')
                keyspace=$(echo $secret_name | awk -F'/' '{print $(NF-1)}')
                secret_payload=$(aws secretsmanager get-secret-value --secret-id $secret_name --query SecretString --output text)
                user_json=$(echo $secret_payload | jq --arg user "$username" --arg keyspace "$keyspace" '. + {user: $user, keyspace: $keyspace}')
                jq ". += [$user_json]" /tmp/vtgate-auth.json > /tmp/vtgate-auth.tmp.json
                mv /tmp/vtgate-auth.tmp.json /tmp/vtgate-auth.json
              done
              kubectl create configmap vtgate-auth-config --from-file=vtgate-auth.json=/tmp/vtgate-auth.json --dry-run=client -o yaml | kubectl apply -f -
          env:
            - name: AWS_REGION
              value: {{ .Values.aws.region }}
          volumeMounts:
            - name: aws-credentials
              mountPath: /root/.aws
              readOnly: true
      volumes:
        - name: aws-credentials
          secret:
            secretName: aws-credentials
      restartPolicy: Never
  backoffLimit: 3
